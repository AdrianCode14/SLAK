version: "3.8"

services:
    postgres:
        container_name: postgres
        image: postgres:16.0
        ports:
            - 5432:5432
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PWD}
            POSTGRES_DB: ${DATABASE}
        volumes:
            - ./backend/scripts/SQL/createDB.sql:/docker-entrypoint-initdb.d/createDB.sql
            - ./backend/postgres-data:/var/lib/postgresql/data
        env_file:
            - .env
        healthcheck:
            test: ["CMD-SHELL", "pg_isready", "-d $${DATABASE} -U $${DB_USER}"]
            interval: 30s
            timeout: 30s
            retries: 3
    backend:
        container_name: backend
        build:
            context: ./backend
            dockerfile: dockerfile
        ports:
            - 3001:3001
        env_file:
            - .env
        depends_on:
            postgres:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
            interval: 30s
            timeout: 10s
            retries: 3
    frontend:
        container_name: frontend
        build:
            context: ./frontend/slack_web
            dockerfile: dockerfile
        depends_on:
            backend:
                condition: service_healthy
            postgres:
                condition: service_healthy
        ports:
            - 80:80
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:80"]
            interval: 30s
            timeout: 10s
            retries: 3
